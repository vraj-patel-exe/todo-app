AWSTemplateFormatVersion: '2010-09-09'
Description: Patel Assignment - AWS ECS Fargate Deployment with CI/CD and Monitoring

Parameters:
  GitHubOwner:
    Type: String
    Description: Your GitHub username
  GitHubRepo:
    Type: String
    Default: todo-app
    Description: GitHub repository name
  GitHubBranch:
    Type: String
    Default: main
    Description: GitHub branch name
  GitHubToken:
    Type: String
    NoEcho: true
    Description: GitHub Personal Access Token (store in AWS Secrets Manager or provide manually)

Resources:
  PatelVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: patel-vpc

  PatelPublicSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn:
      - PatelVPC
    Properties:
      VpcId: !Ref PatelVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: ca-central-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: patel-public-subnet-1

  PatelPublicSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn:
      - PatelVPC
    Properties:
      VpcId: !Ref PatelVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: ca-central-1b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: patel-public-subnet-2

  PatelPrivateSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn:
      - PatelVPC
    Properties:
      VpcId: !Ref PatelVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: ca-central-1a
      Tags:
        - Key: Name
          Value: patel-private-subnet-1

  PatelPrivateSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn:
      - PatelVPC
    Properties:
      VpcId: !Ref PatelVPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: ca-central-1b
      Tags:
        - Key: Name
          Value: patel-private-subnet-2

  PatelInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: patel-igw

  PatelVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn:
      - PatelVPC
      - PatelInternetGateway
    Properties:
      VpcId: !Ref PatelVPC
      InternetGatewayId: !Ref PatelInternetGateway

  PatelPublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn:
      - PatelVPC
    Properties:
      VpcId: !Ref PatelVPC
      Tags:
        - Key: Name
          Value: patel-public-rt

  PatelPublicRoute:
    Type: AWS::EC2::Route
    DependsOn:
      - PatelPublicRouteTable
      - PatelVPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PatelPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref PatelInternetGateway

  PatelPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PatelPublicSubnet1
      - PatelPublicRouteTable
    Properties:
      SubnetId: !Ref PatelPublicSubnet1
      RouteTableId: !Ref PatelPublicRouteTable

  PatelPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PatelPublicSubnet2
      - PatelPublicRouteTable
    Properties:
      SubnetId: !Ref PatelPublicSubnet2
      RouteTableId: !Ref PatelPublicRouteTable

  PatelPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn:
      - PatelVPC
    Properties:
      VpcId: !Ref PatelVPC
      Tags:
        - Key: Name
          Value: patel-private-rt

  PatelNATGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  PatelNATGateway:
    Type: AWS::EC2::NatGateway
    DependsOn:
      - PatelNATGatewayEIP
      - PatelPublicSubnet1
    Properties:
      AllocationId: !GetAtt PatelNATGatewayEIP.AllocationId
      SubnetId: !Ref PatelPublicSubnet1
      Tags:
        - Key: Name
          Value: patel-nat

  PatelPrivateRoute:
    Type: AWS::EC2::Route
    DependsOn:
      - PatelPrivateRouteTable
      - PatelNATGateway
    Properties:
      RouteTableId: !Ref PatelPrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref PatelNATGateway

  PatelPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PatelPrivateSubnet1
      - PatelPrivateRouteTable
    Properties:
      SubnetId: !Ref PatelPrivateSubnet1
      RouteTableId: !Ref PatelPrivateRouteTable

  PatelPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PatelPrivateSubnet2
      - PatelPrivateRouteTable
    Properties:
      SubnetId: !Ref PatelPrivateSubnet2
      RouteTableId: !Ref PatelPrivateRouteTable

  # --- Security Groups ---
  PatelALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn:
      - PatelVPC
    Properties:
      GroupDescription: Security group for Patel ALB
      VpcId: !Ref PatelVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: patel-alb-sg

  PatelECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn:
      - PatelVPC
      - PatelALBSecurityGroup
    Properties:
      GroupDescription: Security group for Patel ECS tasks
      VpcId: !Ref PatelVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          SourceSecurityGroupId: !Ref PatelALBSecurityGroup
      Tags:
        - Key: Name
          Value: patel-ecs-sg

  # --- Application Load Balancer ---
  PatelLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    DependsOn:
      - PatelPublicSubnet1
      - PatelPublicSubnet2
      - PatelALBSecurityGroup
    Properties:
      Name: patel-alb
      Subnets:
        - !Ref PatelPublicSubnet1
        - !Ref PatelPublicSubnet2
      SecurityGroups:
        - !Ref PatelALBSecurityGroup
      Scheme: internet-facing
      Type: application

  PatelTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn:
      - PatelVPC
    Properties:
      Name: patel-tg
      Port: 3000
      Protocol: HTTP
      VpcId: !Ref PatelVPC
      TargetType: ip
      HealthCheckPath: /

  PatelListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - PatelLoadBalancer
      - PatelTargetGroup
    Properties:
      LoadBalancerArn: !Ref PatelLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref PatelTargetGroup

  # --- ECS Cluster ---
  PatelECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: patel-ecs-cluster

  # --- CloudWatch Log Group for ECS Tasks ---
  PatelLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/patel-todo-app
      RetentionInDays: 7

  # --- ECS Task Definition ---
  PatelTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
      - PatelTaskExecutionRole
      - PatelLogGroup
    Properties:
      Family: patel-todo-app-task
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: '256'
      Memory: '512'
      ExecutionRoleArn: !GetAtt PatelTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: todo-app
          Image: 277707106820.dkr.ecr.ca-central-1.amazonaws.com/patel-todo-app-repo:latest
          PortMappings:
            - ContainerPort: 3000
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref PatelLogGroup
              awslogs-region: ca-central-1
              awslogs-stream-prefix: todo-app

  PatelTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # --- ECS Service ---
  PatelECSService:
    Type: AWS::ECS::Service
    DependsOn:
      - PatelECSCluster
      - PatelTaskDefinition
      - PatelECSSecurityGroup
      - PatelListener
    Properties:
      Cluster: !Ref PatelECSCluster
      ServiceName: patel-ecs-service
      TaskDefinition: !Ref PatelTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref PatelPrivateSubnet1
            - !Ref PatelPrivateSubnet2
          SecurityGroups:
            - !Ref PatelECSSecurityGroup
      LoadBalancers:
        - ContainerName: todo-app
          ContainerPort: 3000
          TargetGroupArn: !Ref PatelTargetGroup
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100

  # --- CodeBuild Role ---
  PatelCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PatelCodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:*
                  - logs:*
                  - s3:*
                Resource: '*'

  # --- CodeBuild Project ---
  PatelCodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - PatelCodeBuildRole
    Properties:
      Name: patel-codebuild
      ServiceRole: !GetAtt PatelCodeBuildRole.Arn
      Artifacts:
        Type: S3
        Location: !Sub patel-codepipeline-artifacts-${AWS::AccountId}
        Name: BuildArtifact
        NamespaceType: NONE
        Packaging: ZIP
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: ca-central-1
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: patel-todo-app-repo
          - Name: IMAGE_TAG
            Value: latest
      Source:
        Type: GITHUB
        Location: !Sub https://github.com/${GitHubOwner}/${GitHubRepo}.git
        BuildSpec: buildspec.yml

  # --- CodePipeline Role ---
  PatelCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PatelCodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:*
                  - ecs:*
                  - s3:*
                  - iam:PassRole
                Resource: '*'

  # --- CodePipeline ---
  PatelCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
      - PatelCodePipelineRole
      - PatelCodeBuildProject
      - PatelECSService
    Properties:
      RoleArn: !GetAtt PatelCodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Sub patel-codepipeline-artifacts-${AWS::AccountId}
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
        - Name: Approval
          Actions:
            - Name: ManualApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref PatelCodeBuildProject
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ECS
                Version: '1'
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ClusterName: !Ref PatelECSCluster
                ServiceName: !Ref PatelECSService
                FileName: imagedefinitions.json

  # --- SNS Topic for CloudWatch Alarm ---
  AlarmSNS:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: PatelTodoAppAlarmTopic

  # --- SNS Subscription ---
  AlarmSNSSubscription:
    Type: AWS::SNS::Subscription
    DependsOn:
      - AlarmSNS
    Properties:
      Protocol: email
      Endpoint: "pvraj7515@gmail.com"
      TopicArn: !Ref AlarmSNS

  # --- CloudWatch Alarm for Deployment Failures ---
  DeploymentFailureAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - PatelCodePipeline
      - AlarmSNS
    Properties:
      AlarmName: PatelTodoAppDeploymentFailureAlarm
      AlarmDescription: Alarm for CodePipeline deployment failures
      Namespace: AWS/CodePipeline
      MetricName: PipelineExecutionFailed
      Dimensions:
        - Name: PipelineName
          Value: !Ref PatelCodePipeline
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref AlarmSNS
      TreatMissingData: notBreaching

Outputs:
  LoadBalancerURL:
    Description: URL of the Application Load Balancer
    Value: !Sub http://${PatelLoadBalancer.DNSName}